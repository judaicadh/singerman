---
import entries from '../../data/items.json';
import BaseLayout from '../../layouts/BaseLayout.astro';

// ─── Types ─────────────────────────────────────────────────
type Item = {
    id: string;
    title: string;
    description?: string;
    creator?: string;
    startDate?: number;
    endDate?: number;
    year?: string;
    language?: string[];
    place?: string;
    collection?: string;
    locationNote?: string;
    thumbnail?: string;
    isDigitized?: boolean;
    latLng?: { lat: number; lng: number };
};
import type { GetStaticPaths } from 'astro';

export const getStaticPaths: GetStaticPaths = async () => {
    return entries.map(entry => ({
        params: { slug: entry.id },
    }));
};


export async function getStaticProps({ params }: { params: { slug: string } }) {
    const items = entries.find(entry => entry.id === params.slug);
    if (!items) return { notFound: true };
    return { props: { items } };
}
// ✅ Type Astro.props
const { items } = Astro.props as { items: Item };

// ─── Date Formatting ───────────────────────────────────────
const formatDate = (start?: number, end?: number, fallback?: string) => {
    const startYear = start ? new Date(start * 1000).getUTCFullYear() : null;
    const endYear = end ? new Date(end * 1000).getUTCFullYear() : null;
    if (startYear && endYear && startYear !== endYear) return `${startYear}–${endYear}`;
    return startYear || endYear || fallback || null;
};

const displayDate = formatDate(items.startDate, items.endDate, items.year);
---

<BaseLayout title={items.title}>
    <main class="max-w-5xl mx-auto px-4 py-10 space-y-10">
        <h1 class="text-3xl md:text-4xl font-bold tracking-tight">{items.title}</h1>

        {items.description && (
                <p class="text-lg text-gray-700 dark:text-gray-300">{items.description}</p>
        )}

        <section class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm border-t pt-6 border-gray-200 dark:border-gray-700">
            {items.creator && <div><span class="font-semibold">Creator:</span> {items.creator}</div>}
            {displayDate && <div><span class="font-semibold">Date:</span> {displayDate}</div>}
            {(items.language ?? []).length > 0 && (
                    <div>
                        <span class="font-semibold">Language:</span> {items.language.join(', ')}
                    </div>
            )}
            {items.place && <div><span class="font-semibold">Place:</span> {items.place}</div>}
            {items.collection && <div><span class="font-semibold">Collection:</span> {items.collection}</div>}
            {items.locationNote && <div><span class="font-semibold">Libraries:</span> {items.locationNote}</div>}
        </section>
    </main>
</BaseLayout>